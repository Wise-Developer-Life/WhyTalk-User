{
  "openapi": "3.0.1",
  "info": {
    "title": "WhyTalk User API",
    "description": "User Service, User Profile Service",
    "contact": {
      "name": "WiseDeveloperLife Inc.",
      "url": "https://github.com/Wise-Developer-Life"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "User API",
      "description": "Register, delete users"
    },
    {
      "name": "User Profile API",
      "description": "Get, update user profile"
    }
  ],
  "paths": {
    "/user_profile/{userId}": {
      "get": {
        "tags": [
          "User Profile API"
        ],
        "summary": "Get user profile with userId",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseUserProfileResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Profile API"
        ],
        "summary": "Update user profile with userId",
        "operationId": "updateUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseUserProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Register new user with username/password",
        "operationId": "registerNewUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/match": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Check if username and password match",
        "operationId": "matchUsernamePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicAuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get user with userId",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseUserResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User API"
        ],
        "summary": "Delete user with userId",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseVoid"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateUserProfileRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "example": "example_display_name"
          },
          "bio": {
            "type": "string",
            "example": "example_bio"
          }
        },
        "description": "Update User Profile Request"
      },
      "ReturnResponseUserProfileResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/UserProfileResponse"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      },
      "CreateUserRequest": {
        "required": [
          "email",
          "sex",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "example_user"
          },
          "email": {
            "type": "string",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "example_password"
          },
          "sex": {
            "type": "string",
            "example": "MALE",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          }
        },
        "description": "Create User Request"
      },
      "ReturnResponseUserResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "BasicAuthRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "example_user"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "example_password"
          }
        },
        "description": "Basic Auth Request"
      },
      "ReturnResponseBoolean": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "boolean"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ReturnResponseVoid": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}